name: Release

on:
    push:
        tags:
            - "v[0-9]+"

env:
    GH_TOKEN: ${{ github.token }}

permissions: write-all

jobs:
    release:
        runs-on: ubuntu-latest
        outputs:
            tag: ${{ steps.tags.outputs.current }}
        steps:
            - name: Check out code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Get tags
              id: tags
              run: |
                  echo "current=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
                  echo "previous=$(git describe --tags --abbrev=0 ${{ github.ref_name }}^)" >> "$GITHUB_OUTPUT"

            - name: Create release branch
              run: |
                  git checkout -b release-${{ steps.tags.outputs.current }}
                  git push origin release-${{ steps.tags.outputs.current }}

            - name: Generate changelog
              id: changelog
              run: |
                  CHANGELOG=$(git log --pretty=format:"- %s" "${{ steps.tags.outputs.previous }}..${{ steps.tags.outputs.current }}")
                  printf 'changelog<<EOF\n%s\nEOF' "${CHANGELOG}" >> "$GITHUB_OUTPUT"

            - name: Generate issue body
              id: issue_body
              run: |
                  ISSUE_BODY=$(cat << EOF
                  Author: ${{ github.actor }}

                  Date: $(git show -s --format=%ai ${{ steps.tags.outputs.current }})

                  Version: ${{ steps.tags.outputs.current }}

                  Changelog:
                  ${{ steps.changelog.outputs.changelog }}

                  EOF
                  )
                  printf 'body<<EOF\n%s\nEOF' "${ISSUE_BODY}" >> "$GITHUB_OUTPUT"

            - name: Check for existing release issue
              id: check_issue
              run: |
                  ISSUE_NUMBER=$(gh issue list --label RELEASE --search "${{ steps.tags.outputs.current }} in:title" --json number --jq '.[0].number')
                  echo "issue_number=${ISSUE_NUMBER}" >> "$GITHUB_OUTPUT"

            - name: Update existing release issue or create new one
              run: |
                  RELEASE_DATE=$(git show -s --format=%ai ${CURRENT_TAG})
                  if [[ -z "${{ steps.check_issue.outputs.issue_number }}" ]]; then
                    gh issue create --title "Release ${{ steps.tags.outputs.current }}" --body "${{ steps.issue_body.outputs.body }}" --label RELEASE
                  else
                    gh issue edit ${{ steps.check_issue.outputs.issue_number }} --title "Release ${{ steps.tags.outputs.current }}" --body "${{ steps.issue_body.outputs.body }}"
                  fi

    test:
        needs: release
        uses: ./.github/workflows/pull-request.yml

    deploy:
        needs: [release, test]
        runs-on: ubuntu-latest
        steps:
            - name: Check out code
              uses: actions/checkout@v3

            - name: Set up Node.js 16
              uses: actions/setup-node@v3
              with:
                  node-version: 16

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install dependencies
              run: npm ci

            - name: Build
              run: npm run build

            - name: Deploy
              run: |
                  git remote set-url origin https://git:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
                  npx gh-pages -d build -u "github-actions-bot <support+actions@github.com>"

            - name: Close release issue
              if: ${{ success() }}
              run: |
                  ISSUE_NUMBER=$(gh issue list --label RELEASE --search "${{ needs.release.outputs.tag }} in:title" --json number --jq '.[0].number')
                  gh issue close ${ISSUE_NUMBER}
